{"version":3,"file":"urdf-manipulator-element.js","sources":["../src/urdf-manipulator-element.js"],"sourcesContent":["import * as THREE from 'three';\r\nimport URDFViewer from './urdf-viewer-element.js';\r\n\r\n// urdf-manipulator element\r\n// Displays a URDF model that can be manipulated with the mouse\r\n\r\n// Events\r\n// joint-mouseover: Fired when a joint is hovered over\r\n// joint-mouseout: Fired when a joint is no longer hovered over\r\n// manipulate-start: Fires when a joint is manipulated\r\n// manipulate-end: Fires when a joint is done being manipulated\r\nexport default\r\nclass URDFManipulator extends URDFViewer {\r\n\r\n    static get observedAttributes() {\r\n\r\n        return ['highlight-color', ...super.observedAttributes];\r\n\r\n    }\r\n\r\n    get disableDragging() { return this.hasAttribute('disable-dragging'); }\r\n    set disableDragging(val) { val ? this.setAttribute('disable-dragging', !!val) : this.removeAttribute('disable-dragging'); }\r\n\r\n    get highlightColor() { return this.getAttribute('highlight-color') || '#FFFFFF'; }\r\n    set highlightColor(val) { val ? this.setAttribute('highlight-color', val) : this.removeAttribute('highlight-color'); }\r\n\r\n    constructor(...args) {\r\n\r\n        super(...args);\r\n\r\n        // The highlight material\r\n        this.highlightMaterial =\r\n            new THREE.MeshPhongMaterial({\r\n                shininess: 10,\r\n                color: this.highlightColor,\r\n                emissive: this.highlightColor,\r\n                emissiveIntensity: 0.25,\r\n            });\r\n\r\n        const el = this.renderer.domElement;\r\n\r\n        // Saved mouse data between frames and initial\r\n        // click point in space\r\n        const mouse = new THREE.Vector2();\r\n        const lastMouse = new THREE.Vector2();\r\n        const clickPoint = new THREE.Vector3();\r\n\r\n        // Reuseable variables\r\n        const raycaster = new THREE.Raycaster();\r\n        const delta = new THREE.Vector2();\r\n        const plane = new THREE.Plane();\r\n        const line = new THREE.Line3();\r\n\r\n        // The joint being manipulated\r\n        let dragging = null;\r\n\r\n        const toMouseCoord = (e, v) => {\r\n\r\n            v.x = ((e.pageX - el.offsetLeft) / el.offsetWidth) * 2 - 1;\r\n            v.y = -((e.pageY - el.offsetTop) / el.offsetHeight) * 2 + 1;\r\n\r\n        };\r\n\r\n        // Get which part of the robot is hit by the mouse click\r\n        const getCollisions = m => {\r\n\r\n            if (!this.robot) return [];\r\n\r\n            raycaster.setFromCamera(m, this.camera);\r\n\r\n            const meshes = [];\r\n            this.robot.traverse(c => c.type === 'Mesh' && meshes.push(c));\r\n\r\n            return raycaster.intersectObjects(meshes);\r\n\r\n        };\r\n\r\n        const isJoint = j => {\r\n\r\n            return j.isURDFJoint && j.jointType !== 'fixed';\r\n\r\n        };\r\n\r\n        // Find the nearest parent that is a joint\r\n        const findNearestJoint = m => {\r\n\r\n            let curr = m;\r\n            while (curr) {\r\n\r\n                if (isJoint(curr)) {\r\n\r\n                    break;\r\n\r\n                }\r\n\r\n                curr = curr.parent;\r\n\r\n            }\r\n\r\n            return curr;\r\n\r\n        };\r\n\r\n        // Highlight the link geometry under a joint\r\n        const highlightLinkGeometry = (m, revert) => {\r\n\r\n            const traverse = c => {\r\n\r\n                // Set or revert the highlight color\r\n                if (c.type === 'Mesh') {\r\n\r\n                    if (revert) {\r\n\r\n                        c.material = c.__origMaterial;\r\n                        delete c.__origMaterial;\r\n\r\n                    } else {\r\n\r\n                        c.__origMaterial = c.material;\r\n                        c.material = this.highlightMaterial;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                // Look into the children and stop if the next child is\r\n                // another joint\r\n                if (c === m || !isJoint(c)) {\r\n\r\n                    for (let i = 0; i < c.children.length; i++) {\r\n\r\n                        traverse(c.children[i]);\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            };\r\n\r\n            traverse(m);\r\n\r\n        };\r\n\r\n        const temp = new THREE.Vector3();\r\n        const intersect1 = new THREE.Vector3();\r\n        const intersect2 = new THREE.Vector3();\r\n\r\n        // Get the changed angle between mouse position 1 and 2\r\n        // when manipulating target\r\n        const getAngle = (tg, m1, m2) => {\r\n\r\n            // TODO: Why is the constant negated?\r\n            plane.normal.copy(tg.axis).transformDirection(tg.matrixWorld).normalize();\r\n            plane.constant = -plane.normal.dot(clickPoint);\r\n\r\n            // If the camera is looking at the rotation axis at a skewed angle\r\n            temp.copy(this.camera.position).sub(clickPoint).normalize();\r\n            if (Math.abs(temp.dot(plane.normal)) < 0.2) {\r\n\r\n                // distance to the clicked point\r\n                const dist = temp.copy(clickPoint).sub(this.camera.position).length() * 0.9;\r\n\r\n                // Get the point closest to the original clicked point\r\n                // and use that as center of the rotation axis\r\n                temp.set(0, 0, 0).applyMatrix4(tg.matrixWorld);\r\n                temp.addScaledVector(plane.normal, -plane.distanceToPoint(temp));\r\n\r\n                // Project out from the camera\r\n                raycaster.setFromCamera(m1, this.camera);\r\n                intersect1.copy(raycaster.ray.origin).add(\r\n                    raycaster.ray.direction.normalize().multiplyScalar(dist),\r\n                );\r\n                intersect1.sub(temp);\r\n\r\n                raycaster.setFromCamera(m2, this.camera);\r\n                intersect2.copy(raycaster.ray.origin).add(\r\n                    raycaster.ray.direction.normalize().multiplyScalar(dist),\r\n                );\r\n                intersect2.sub(temp);\r\n\r\n                temp.crossVectors(intersect2, intersect1).normalize();\r\n\r\n                // Multiply by a magic number to make it feel good\r\n                return temp.dot(plane.normal) * intersect2.angleTo(intersect1) * 2;\r\n\r\n            } else {\r\n\r\n                // Get the point closest to the original clicked point\r\n                // and use that as center of the rotation axis\r\n                temp.set(0, 0, 0).applyMatrix4(tg.matrixWorld);\r\n                temp.addScaledVector(plane.normal, -plane.distanceToPoint(temp));\r\n\r\n                // project onto the plane of rotation\r\n                raycaster.setFromCamera(m1, this.camera);\r\n                line.start.copy(raycaster.ray.origin);\r\n                line.end.copy(raycaster.ray.origin).add(raycaster.ray.direction.normalize().multiplyScalar(1e5));\r\n                plane.intersectLine(line, intersect1);\r\n                intersect1.sub(temp);\r\n\r\n                raycaster.setFromCamera(m2, this.camera);\r\n                line.start.copy(raycaster.ray.origin);\r\n                line.end.copy(raycaster.ray.origin).add(raycaster.ray.direction.normalize().multiplyScalar(1e5));\r\n                plane.intersectLine(line, intersect2);\r\n                intersect2.sub(temp);\r\n\r\n                temp.crossVectors(intersect2, intersect1);\r\n\r\n                return Math.sign(temp.dot(plane.normal)) * intersect2.angleTo(intersect1);\r\n\r\n            }\r\n\r\n        };\r\n\r\n        // Get the amount to move the prismatic joint based on the mouse move\r\n        const getMove = (tg, m1, m2) => {\r\n\r\n            const dist = temp.copy(clickPoint).sub(this.camera.position).length();\r\n\r\n            raycaster.setFromCamera(m1, this.camera);\r\n            raycaster.ray.direction.normalize().multiplyScalar(dist);\r\n            intersect1.copy(raycaster.ray.origin).add(raycaster.ray.direction);\r\n\r\n            raycaster.setFromCamera(m2, this.camera);\r\n            raycaster.ray.direction.normalize().multiplyScalar(dist);\r\n            intersect2.copy(raycaster.ray.origin).add(raycaster.ray.direction);\r\n\r\n            temp.copy(intersect2).sub(intersect1);\r\n\r\n            plane.normal.copy(tg.axis).transformDirection(tg.parent.matrixWorld).normalize();\r\n\r\n            return temp.length() * -Math.sign(temp.dot(plane.normal));\r\n\r\n        };\r\n\r\n        el.addEventListener('mousedown', e => {\r\n\r\n            if (this.disableDragging) return;\r\n\r\n            toMouseCoord(e, mouse);\r\n            lastMouse.copy(mouse);\r\n\r\n            // get the information on the clicked item\r\n            // and set the dragged joint\r\n            const target = getCollisions(mouse).shift();\r\n            if (target) {\r\n\r\n                dragging = findNearestJoint(target.object);\r\n\r\n                if (dragging) {\r\n\r\n                    clickPoint.copy(target.point);\r\n                    this.dispatchEvent(new CustomEvent('manipulate-start', { bubbles: true, cancelable: true, detail: dragging.name }));\r\n                    this.controls.enabled = false;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }, true);\r\n\r\n        let hovered = null;\r\n        this._mouseMoveFunc = e => {\r\n\r\n            toMouseCoord(e, mouse);\r\n            delta.copy(mouse).sub(lastMouse);\r\n\r\n            // Keep track of the hovered item. If an item is being\r\n            // dragged, then it is considered hovered\r\n            const wasHovered = hovered;\r\n            if (hovered) {\r\n\r\n                hovered = null;\r\n            }\r\n\r\n            if (dragging == null && this.disableDragging === false) {\r\n\r\n                const collision = getCollisions(mouse).shift() || null;\r\n                const joint = collision && findNearestJoint(collision.object);\r\n                if (joint) {\r\n\r\n                    hovered = joint;\r\n\r\n                }\r\n\r\n            } else if (dragging) {\r\n\r\n                hovered = dragging;\r\n\r\n            }\r\n\r\n            // Highlight the meshes and broadcast events if the hovered item changed\r\n            if (hovered !== wasHovered) {\r\n\r\n                if (wasHovered) {\r\n\r\n                    highlightLinkGeometry(wasHovered, true);\r\n                    this.dispatchEvent(new CustomEvent('joint-mouseout', { bubbles: true, cancelable: true, detail: wasHovered.name }));\r\n\r\n                }\r\n\r\n                if (hovered) {\r\n\r\n                    highlightLinkGeometry(hovered, false);\r\n                    this.dispatchEvent(new CustomEvent('joint-mouseover', { bubbles: true, cancelable: true, detail: hovered.name }));\r\n\r\n                }\r\n\r\n                this.redraw();\r\n\r\n            }\r\n\r\n            // Apply the manipulation\r\n            if (dragging !== null) {\r\n\r\n                let delta = null;\r\n                if (dragging.jointType === 'revolute' || dragging.jointType === 'continuous') {\r\n\r\n                    delta = getAngle(dragging, mouse, lastMouse);\r\n\r\n                } else if (dragging.jointType === 'prismatic') {\r\n\r\n                    delta = getMove(dragging, mouse, lastMouse);\r\n\r\n                } else {\r\n\r\n                    // Not supported\r\n\r\n                }\r\n\r\n                if (delta) {\r\n\r\n                    this.setAngle(dragging.name, dragging.angle + delta);\r\n\r\n                }\r\n\r\n            }\r\n\r\n            lastMouse.copy(mouse);\r\n\r\n        };\r\n\r\n        // Clean up\r\n        this._mouseUpFunc = e => {\r\n\r\n            if (dragging) {\r\n\r\n                this.dispatchEvent(new CustomEvent('manipulate-end', { bubbles: true, cancelable: true, detail: dragging.name }));\r\n                dragging = null;\r\n                this.controls.enabled = true;\r\n\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    connectedCallback() {\r\n\r\n        super.connectedCallback();\r\n        window.addEventListener('mousemove', this._mouseMoveFunc, true);\r\n        window.addEventListener('mouseup', this._mouseUpFunc, true);\r\n\r\n    }\r\n\r\n    disconnectedCallback() {\r\n\r\n        super.disconnectedCallback();\r\n        window.removeEventListener('mousemove', this._mouseMoveFunc, true);\r\n        window.removeEventListener('mouseup', this._mouseUpFunc, true);\r\n\r\n    }\r\n\r\n    attributeChangedCallback(attr, oldval, newval) {\r\n\r\n        super.attributeChangedCallback(attr, oldval, newval);\r\n\r\n        switch (attr) {\r\n\r\n            case 'highlight-color':\r\n                this.highlightMaterial.color.set(this.highlightColor);\r\n                this.highlightMaterial.emissive.set(this.highlightColor);\r\n                break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n};\r\n"],"names":["URDFViewer","THREE.MeshPhongMaterial","THREE.Vector2","THREE.Vector3","THREE.Raycaster","THREE.Plane","THREE.Line3"],"mappings":"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"}